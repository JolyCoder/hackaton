{"ast":null,"code":"var _jsxFileName = \"/Users/JolyCoder/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B/hackaton/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route } from 'react-router';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport history from './parts/history';\nimport Register from './parts/register';\nimport { createStore } from 'redux';\nimport Login from './parts/login';\nimport MyCab from './parts/mycab';\nvar initState = {\n  session: {\n    user: \"\",\n    logged: false\n  }\n};\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  return state;\n}\n\nvar store = createStore(reducer);\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(Router, {\n  history: history,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/reg\",\n  component: Register,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/login\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/mycab\",\n  component: MyCab,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n})))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.register();","map":{"version":3,"sources":["/Users/JolyCoder/Проекты/hackaton/src/index.js"],"names":["React","ReactDOM","Router","Route","Provider","App","serviceWorker","history","Register","createStore","Login","MyCab","initState","session","user","logged","reducer","state","store","render","document","getElementById","register"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,cAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,aAAP;AACA,OAAO,kCAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAE,EADD;AAELC,IAAAA,MAAM,EAAE;AAFH;AADK,CAAlB;;AAOA,SAASC,OAAT,GACA;AAAA,MADiBC,KACjB,uEADyBL,SACzB;AACI,SAAOK,KAAP;AACH;;AAED,IAAMC,KAAK,GAAGT,WAAW,CAACO,OAAD,CAAzB;AAEAf,QAAQ,CAACkB,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAEX,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAEF,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,MAAZ;AAAmB,EAAA,SAAS,EAAEG,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,SAAS,EAAEE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,EAII,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,SAAS,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,CADJ,CADJ,CADJ,EAWES,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAXF,E,CAaA;AACA;AACA;;AACAf,aAAa,CAACgB,QAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route } from 'react-router'\nimport { Provider } from 'react-redux' \nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport history from './parts/history'\nimport Register from './parts/register'\nimport { createStore } from 'redux'\nimport Login from './parts/login'\nimport MyCab from './parts/mycab'\n\nconst initState = {\n    session: {\n        user: \"\",\n        logged: false\n    }\n}\n\nfunction reducer(state = initState)\n{\n    return state;\n}\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <div>\n                <Route exact path='/' component={App} />\n                <Route path='/reg' component={Register} />\n                <Route path='/login' component={Login} />\n                <Route path='/mycab' component={MyCab} />\n            </div>\n        </Router>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"]},"metadata":{},"sourceType":"module"}